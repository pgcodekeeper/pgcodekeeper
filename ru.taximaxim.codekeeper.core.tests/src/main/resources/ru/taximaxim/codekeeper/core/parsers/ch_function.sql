CREATE FUNCTION `01856_test_function_1` AS (a, b) -> test_function_1(a, b) + test_function_1(a, b);
CREATE FUNCTION test_function_2 AS (a) -> a || '!!!';
CREATE FUNCTION test_function AS x -> x + 1;
CREATE FUNCTION test_function_with_nested_function_arg AS (x) -> test_function(x);
CREATE FUNCTION test_function_with_nested_function_empty_args AS () -> test_function(1);
CREATE FUNCTION function_0 AS x -> function(x);
CREATE FUNCTION function_1 AS x -> function_2(x);
CREATE FUNCTION function_2 AS x -> function_1(x);
CREATE FUNCTION function AS () -> 5;
CREATE FUNCTION function AS () -> x;
CREATE FUNCTION function AS x -> x;
CREATE FUNCTION test_function AS () -> (SELECT * FROM test_table LIMIT 1);
CREATE FUNCTION test_function AS () -> (SELECT 1);
CREATE FUNCTION test_function AS (x) -> (SELECT x + 1);
CREATE FUNCTION test_function_nested AS (x) -> test_function(x + 2);
CREATE FUNCTION plusthree AS (a) -> a + 3;
CREATE FUNCTION plustwo AS (a) -> a + 2;
CREATE FUNCTION plusone AS (a) -> a + 1;
CREATE FUNCTION plusthree AS (a) -> a + 3;
CREATE FUNCTION plusthreedays AS (a) -> a + INTERVAL 3 DAY;
CREATE FUNCTION plusthreemonths AS (a) -> a + INTERVAL 3 MONTH;
CREATE FUNCTION plustwo AS (a) -> a + 2;
CREATE FUNCTION f1 AS (x) -> x;
CREATE FUNCTION hasValidSizes17 AS (arr1, arr2) -> length(arr1) = length(arr2) AND arrayAll((x, y) -> length(x) = length(y), arr1, arr2);
CREATE FUNCTION "from select" AS (a) -> a + 2;
CREATE FUNCTION test_qual AS (x) -> default.t2;
CREATE FUNCTION emoji1 AS (n) -> if(n % 2, 'ðŸ˜Ž ðŸ¤™ !!', 'ðŸ™ˆ ðŸ™‰ ðŸ™Š');
CREATE FUNCTION emoji2 AS (n) -> if(n % 2, 'ðŸ™ˆ ðŸ™‰ ðŸ™Š', '  no emoji  ');

DROP FUNCTION test_function_0;
DROP FUNCTION test_function;
DROP FUNCTION IF EXISTS plusthreemonths;
DROP FUNCTION IF EXISTS plustwo;
DROP FUNCTION IF EXISTS hasValidSizes17;
DROP FUNCTION unknown_function;
DROP FUNCTION "create";