CREATE ROLE "Public";
CREATE ROLE "None";
CREATE ROLE "current_user";
CREATE ROLE "session_user";
CREATE ROLE "user";
CREATE ROLE regress_testrol0 SUPERUSER LOGIN;
CREATE ROLE regress_testrolx SUPERUSER LOGIN;
CREATE ROLE regress_testrol2 SUPERUSER;
CREATE ROLE regress_testrol1 SUPERUSER LOGIN IN ROLE regress_testrol2;
CREATE ROLE jan WITH CREATEEXTTABLE(type='readable', protocol='gpfdist');
SET ROLE regress_testrol2;
CREATE USER jan WITH CREATEEXTTABLE(type='readable', protocol='gpfdist');
ALTER ROLE CURRENT_USER WITH REPLICATION;
ALTER ROLE "current_user" WITH REPLICATION;
ALTER ROLE SESSION_USER WITH REPLICATION;
ALTER ROLE "session_user" WITH REPLICATION;
ALTER USER "Public" WITH REPLICATION;
ALTER USER "None" WITH REPLICATION;
ALTER USER regress_testrol1 WITH NOREPLICATION;
ALTER USER regress_testrol2 WITH NOREPLICATION;
ALTER USER CURRENT_USER WITH REPLICATION;
ALTER USER "current_user" WITH REPLICATION;
ALTER USER SESSION_USER WITH REPLICATION;
ALTER USER "session_user" WITH REPLICATION;
ALTER USER "Public" WITH REPLICATION;
ALTER USER "None" WITH REPLICATION;
ALTER USER jan WITH CREATEEXTTABLE(type='readable', protocol='gpfdist');
ALTER USER regress_testrol1 WITH NOREPLICATION;
ALTER USER regress_testrol2 WITH NOREPLICATION;
ALTER ROLE CURRENT_USER SET application_name to 'FOO';
ALTER ROLE SESSION_USER SET application_name to 'BAR';
ALTER ROLE "current_user" SET application_name to 'FOOFOO';
ALTER ROLE jan WITH CREATEEXTTABLE(type='writable', protocol='http');
ALTER ROLE "Public" SET application_name to 'BARBAR';
ALTER ROLE ALL SET application_name to 'SLAP';
ALTER ROLE regress_testrol1 SET application_name to 'SLAM';
ALTER ROLE CURRENT_USER RESET application_name;
ALTER ROLE SESSION_USER RESET application_name;
ALTER ROLE "current_user" RESET application_name;
ALTER ROLE "Public" RESET application_name;
ALTER ROLE ALL RESET application_name;
ALTER USER CURRENT_USER SET application_name to 'FOO';
ALTER USER SESSION_USER SET application_name to 'BAR';
ALTER USER "current_user" SET application_name to 'FOOFOO';
ALTER USER "Public" SET application_name to 'BARBAR';
ALTER USER ALL SET application_name to 'SLAP';
ALTER USER regress_testrol1 SET application_name to 'SLAM';
ALTER USER CURRENT_USER RESET application_name;
ALTER USER SESSION_USER RESET application_name;
ALTER USER "current_user" RESET application_name;
ALTER USER "Public" RESET application_name;
ALTER USER ALL RESET application_name;
CREATE SCHEMA newschema1 AUTHORIZATION CURRENT_USER;
CREATE SCHEMA newschema2 AUTHORIZATION "current_user";
CREATE SCHEMA newschema3 AUTHORIZATION SESSION_USER;
CREATE SCHEMA newschema4 AUTHORIZATION regress_testrolx;
CREATE SCHEMA newschema5 AUTHORIZATION "Public";
SET ROLE regress_testrol2;
ALTER AGGREGATE testagg1(int2) OWNER TO CURRENT_USER;
ALTER AGGREGATE testagg2(int2) OWNER TO "current_user";
ALTER AGGREGATE testagg3(int2) OWNER TO SESSION_USER;
ALTER AGGREGATE testagg4(int2) OWNER TO regress_testrolx;
ALTER AGGREGATE testagg5(int2) OWNER TO "Public";
CREATE USER MAPPING FOR CURRENT_USER SERVER sv1 OPTIONS (user 'CURRENT_USER');
CREATE USER MAPPING FOR "current_user" SERVER sv2 OPTIONS (user '"current_user"');
CREATE USER MAPPING FOR USER SERVER sv3 OPTIONS (user 'USER');
CREATE USER MAPPING FOR "user" SERVER sv4 OPTIONS (user '"USER"');
CREATE USER MAPPING FOR SESSION_USER SERVER sv5 OPTIONS (user 'SESSION_USER');
CREATE USER MAPPING FOR PUBLIC SERVER sv6 OPTIONS (user 'PUBLIC');
CREATE USER MAPPING FOR "Public" SERVER sv7 OPTIONS (user '"Public"');
CREATE USER MAPPING FOR regress_testrolx SERVER sv8 OPTIONS (user 'regress_testrolx');
ALTER USER MAPPING FOR CURRENT_USER SERVER sv1 OPTIONS (SET user 'CURRENT_USER_alt');
ALTER USER MAPPING FOR "current_user" SERVER sv2 OPTIONS (SET user '"current_user"_alt');
ALTER USER MAPPING FOR USER SERVER sv3 OPTIONS (SET user 'USER_alt');
ALTER USER MAPPING FOR "user" SERVER sv4 OPTIONS (SET user '"user"_alt');
ALTER USER MAPPING FOR SESSION_USER SERVER sv5 OPTIONS (SET user 'SESSION_USER_alt');
ALTER USER MAPPING FOR PUBLIC SERVER sv6 OPTIONS (SET user 'public_alt');
ALTER USER MAPPING FOR "Public" SERVER sv7 OPTIONS (SET user '"Public"_alt');
ALTER USER MAPPING FOR regress_testrolx SERVER sv8 OPTIONS (SET user 'regress_testrolx_alt');
DROP USER MAPPING FOR CURRENT_USER SERVER sv1;
DROP USER MAPPING FOR "current_user" SERVER sv2;
DROP USER MAPPING FOR USER SERVER sv3;
DROP USER MAPPING FOR "user" SERVER sv4;
DROP USER MAPPING FOR SESSION_USER SERVER sv5;
DROP USER MAPPING FOR PUBLIC SERVER sv6;
DROP USER MAPPING FOR "Public" SERVER sv7;
DROP USER MAPPING FOR regress_testrolx SERVER sv8;
DROP USER MAPPING FOR nonexistent SERVER sv;
CREATE USER MAPPING FOR CURRENT_USER SERVER sv1 OPTIONS (user 'CURRENT_USER');
CREATE USER MAPPING FOR "current_user" SERVER sv2 OPTIONS (user '"current_user"');
CREATE USER MAPPING FOR USER SERVER sv3 OPTIONS (user 'USER');
CREATE USER MAPPING FOR "user" SERVER sv4 OPTIONS (user '"USER"');
CREATE USER MAPPING FOR SESSION_USER SERVER sv5 OPTIONS (user 'SESSION_USER');
CREATE USER MAPPING FOR PUBLIC SERVER sv6 OPTIONS (user 'PUBLIC');
CREATE USER MAPPING FOR "Public" SERVER sv7 OPTIONS (user '"Public"');
CREATE USER MAPPING FOR regress_testrolx SERVER sv8 OPTIONS (user 'regress_testrolx');
DROP USER MAPPING IF EXISTS FOR CURRENT_USER SERVER sv1;
DROP USER MAPPING IF EXISTS FOR "current_user" SERVER sv2;
DROP USER MAPPING IF EXISTS FOR USER SERVER sv3;
DROP USER MAPPING IF EXISTS FOR "user" SERVER sv4;
DROP USER MAPPING IF EXISTS FOR SESSION_USER SERVER sv5;
DROP USER MAPPING IF EXISTS FOR PUBLIC SERVER sv6;
DROP USER MAPPING IF EXISTS FOR "Public" SERVER sv7;
DROP USER MAPPING IF EXISTS FOR regress_testrolx SERVER sv8;
DROP USER MAPPING IF EXISTS FOR nonexistent SERVER sv9;  -- error
REVOKE ALL PRIVILEGES ON FUNCTION testagg1(int2) FROM PUBLIC;
REVOKE ALL PRIVILEGES ON FUNCTION testagg2(int2) FROM PUBLIC;
REVOKE ALL PRIVILEGES ON FUNCTION testagg3(int2) FROM PUBLIC;
REVOKE ALL PRIVILEGES ON FUNCTION testagg4(int2) FROM PUBLIC;
REVOKE ALL PRIVILEGES ON FUNCTION testagg5(int2) FROM PUBLIC;
REVOKE ALL PRIVILEGES ON FUNCTION testagg6(int2) FROM PUBLIC;
REVOKE ALL PRIVILEGES ON FUNCTION testagg7(int2) FROM PUBLIC;
REVOKE ALL PRIVILEGES ON FUNCTION testagg8(int2) FROM PUBLIC;
GRANT ALL PRIVILEGES ON FUNCTION testagg1(int2) TO PUBLIC;
--GRANT ALL PRIVILEGES ON FUNCTION testagg2(int2) TO CURRENT_USER;
GRANT ALL PRIVILEGES ON FUNCTION testagg3(int2) TO "current_user";
--GRANT ALL PRIVILEGES ON FUNCTION testagg4(int2) TO SESSION_USER;
GRANT ALL PRIVILEGES ON FUNCTION testagg5(int2) TO "Public";
GRANT ALL PRIVILEGES ON FUNCTION testagg6(int2) TO regress_testrolx;
GRANT ALL PRIVILEGES ON FUNCTION testagg7(int2) TO "public";
--GRANT ALL PRIVILEGES ON FUNCTION testagg8(int2) TO current_user, public, regress_testrolx;
REVOKE ALL PRIVILEGES ON FUNCTION testagg1(int2) FROM PUBLIC;
--REVOKE ALL PRIVILEGES ON FUNCTION testagg2(int2) FROM CURRENT_USER;
REVOKE ALL PRIVILEGES ON FUNCTION testagg3(int2) FROM "current_user";
--REVOKE ALL PRIVILEGES ON FUNCTION testagg4(int2) FROM SESSION_USER;
REVOKE ALL PRIVILEGES ON FUNCTION testagg5(int2) FROM "Public";
REVOKE ALL PRIVILEGES ON FUNCTION testagg6(int2) FROM regress_testrolx;
REVOKE ALL PRIVILEGES ON FUNCTION testagg7(int2) FROM "public";
--REVOKE ALL PRIVILEGES ON FUNCTION testagg8(int2) FROM current_user, public, regress_testrolx;
GRANT pg_read_all_stats TO regress_role_haspriv;
REVOKE pg_read_all_stats FROM regress_role_haspriv;
GRANT pg_read_all_settings TO regress_role_haspriv;
DROP OWNED BY regress_testrol0, "Public", "current_user", regress_testrol1, regress_testrol2, regress_testrolx CASCADE;
DROP ROLE regress_testrol0, regress_testrol1, regress_testrol2, regress_testrolx;
DROP ROLE "Public", "None", "current_user", "session_user", "user";
DROP ROLE regress_role_haspriv, regress_role_nopriv;
CREATE ROLE regress_passwd1 PASSWORD 'role_pwd1';
CREATE ROLE regress_passwd2 PASSWORD 'role_pwd2';
CREATE ROLE regress_passwd3 PASSWORD 'role_pwd3';
CREATE ROLE regress_passwd4 PASSWORD NULL;
ALTER ROLE regress_passwd2_new RENAME TO regress_passwd2;
ALTER ROLE regress_passwd1 PASSWORD 'md5cd3578025fe2c3d7ed1b9a9b26238b70';
ALTER ROLE  regress_passwd4 PASSWORD 'foo';
CREATE ROLE regress_passwd_empty PASSWORD '';
ALTER ROLE regress_passwd_empty PASSWORD 'md585939a5ce845f1a1b620742e3c659e0a';
CREATE ROLE regress_test_def_superuser;
CREATE ROLE regress_test_superuser WITH SUPERUSER;
ALTER ROLE regress_test_superuser WITH NOSUPERUSER;
CREATE ROLE regress_test_inherit WITH NOINHERIT;
ALTER ROLE regress_test_inherit WITH INHERIT;
CREATE ROLE regress_test_createrole WITH CREATEROLE;
ALTER ROLE regress_test_createrole WITH NOCREATEROLE;
CREATE ROLE regress_test_createdb WITH CREATEDB;
ALTER ROLE regress_test_createdb WITH NOCREATEDB;
CREATE USER regress_test_user_canlogin WITH NOLOGIN;
ALTER USER regress_test_user_canlogin WITH LOGIN;
CREATE ROLE regress_test_replication WITH REPLICATION;
ALTER ROLE regress_test_replication WITH NOREPLICATION;
CREATE ROLE regress_test_bypassrls WITH BYPASSRLS;
ALTER ROLE regress_test_bypassrls WITH NOBYPASSRLS;
CREATE ROLE regress_subscription_user LOGIN SUPERUSER;
CREATE ROLE regress_subscription_user_dummy LOGIN NOSUPERUSER;
CREATE ROLE "ðŸ˜Ž ðŸ¤™ !!";
CREATE ROLE "ðŸ™ˆ ðŸ™‰ ðŸ™Š";